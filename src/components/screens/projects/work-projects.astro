---
import type { TProject } from "~/lib/projects";

import { time } from "~/lib/time";

import { Image } from "astro:assets";
import { Card, CardDescription, CardLink } from "~/components/ui/card";
import { LinkIcon } from "~/components/icons/link-icon";

import Technologies from "~/components/elements/technologies.astro";

interface Props {
    title?: string;
    projects: TProject[];
}

const { title, projects } = Astro.props as Props;
---

<div class={title && "mt-24 sm:mt-32"}>
    {title && <h2 class="text-2xl font-bold tracking-tight text-zinc-800 dark:text-zinc-100">{title}</h2>}
    <div class="mt-8 sm:mt-12">
        <ul role="list" class="grid grid-cols-1 gap-x-12 gap-y-16 sm:grid-cols-2 lg:grid-cols-3">
            {
                projects.map((project) => (
                    <Card as="li" className="space-y-2">
                        <div class="relative z-10 flex h-12 w-12 items-center justify-center rounded-full bg-white shadow-md ring-1 shadow-zinc-800/5 ring-zinc-900/5 dark:border dark:border-zinc-700/50 dark:bg-zinc-800 dark:ring-0">
                            <Image src={project.data.logo} alt="" class="h-8 w-8" loading="lazy" />
                        </div>
                        <h2 class="text-base font-semibold text-zinc-800 dark:text-zinc-100">
                            <CardLink
                                href={project.data.link?.href || `/projects/${project.slug}`}
                                target={project.data.link?.href ? "_blank" : undefined}
                            >
                                {project.data.name}
                            </CardLink>
                        </h2>
                        <div class="relative flex items-center space-x-2 text-xs text-zinc-400 dark:text-zinc-500">
                            <time datetime={project.data.date.start.toISOString()}>
                                {time.formatToShortDate(project.data.date.start)}
                            </time>
                            <div>-</div>
                            {project.data.date.end ? (
                                <time datetime={project.data.date.end.toISOString()}>
                                    {time.formatToShortDate(project.data.date.end)}
                                </time>
                            ) : (
                                <span>Present</span>
                            )}
                        </div>
                        <CardDescription>{project.data.description}</CardDescription>
                        <Technologies class="py-2" technologies={project.data.technologies} />
                        <p class="relative z-10 flex text-sm font-medium text-zinc-400 transition group-hover:text-teal-500 dark:text-zinc-200">
                            <LinkIcon className="h-6 w-6 flex-none" />
                            <span class="ml-2">{project.data.link?.label || "Case Study"}</span>
                        </p>
                    </Card>
                ))
            }
        </ul>
    </div>
</div>
