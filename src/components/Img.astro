---
import type { ImageMetadata } from 'astro';

export type TLoading = 'eager' | 'lazy';

export interface Props {
	src: string;
	alt: string;
	loading?: TLoading;
	class?: string;
}

const { src, loading = 'lazy', ...props } = Astro.props as Props;

const images = import.meta.glob<{ default: ImageMetadata }>(
	'/src/assets/**/*.{jpeg,jpg,png,gif,svg}'
);

if (src && !images[src]) {
	throw new Error(`"${src}" does not exist in glob: "src/assets/*.{jpeg,jpg,png,gif}"`);
}

const { default: x } = await images[src]();
---

<img src={x.src} loading={loading} {...props} />
