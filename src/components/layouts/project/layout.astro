---
import { capitalizeFirstLetter } from "@/lib/utils";

import { ArrowLeft } from "lucide-react";
import { ExternalLink } from "lucide-react";

import Github from "@/components/icons/github.astro";
import Pattern from "@/components/ui/pattern.astro";
import Box from "@/components/ui/box-index.astro";
import BoxTitle from "@/components/ui/box-title.astro";
import BoxHeader from "@/components/ui/box-header.astro";
import BoxContent from "@/components/ui/box-content.astro";
import LinkBtn from "@/components/ui/link-btn.astro";
import Badge from "@/components/ui/badge.astro";

import SiteLayout from "@/components/layouts/site/layout.astro";
import SiteHeader from "@/components/layouts/site/header.astro";
import SiteFooter from "@/components/layouts/site/footer.astro";

interface Props {
    title: string;
    technologies: string[];
    sourceCode?: string;
    preview?: string;
    image?: string;
    description: string;
}

const { title, technologies, description, preview, sourceCode, image } = Astro.props;
---

<SiteLayout title={`${title}`} ogImage={image} description={description}>
    <SiteHeader />

    <main class="mx-auto min-h-screen max-w-3xl" aria-label="Main content">
        <Pattern className="h-14">
            <div class="z-1 mx-2 mt-auto flex w-full items-center justify-between">
                <LinkBtn ariaLabel="Back btn" href="/projects">
                    <ArrowLeft />
                </LinkBtn>
                <div>
                    {
                        sourceCode && (
                            <LinkBtn
                                ariaLabel="Source code"
                                target="_blank"
                                className="text-xs"
                                variant="default"
                                href={sourceCode}
                            >
                                Source
                                <Github class="size-3" />
                            </LinkBtn>
                        )
                    }
                    {
                        preview && (
                            <LinkBtn
                                ariaLabel="Deployed App"
                                variant="default"
                                target="_blank"
                                className="text-xs"
                                variant="default"
                                href={preview}
                            >
                                Preview
                                <ExternalLink className="size-3" />
                            </LinkBtn>
                        )
                    }
                </div>
            </div>
        </Pattern>

        <Box>
            <BoxHeader>
                <BoxTitle className="text-2xl !font-black md:text-3xl">{capitalizeFirstLetter(title)}</BoxTitle>
            </BoxHeader>

            <BoxContent className="space-y-4">
                <div class="flex flex-wrap gap-1.5">
                    {
                        technologies.map(technology => {
                            return <Badge>{technology}</Badge>;
                        })
                    }
                </div>
            </BoxContent>
        </Box>

        <Pattern />

        <Box className="min-w-full">
            <BoxContent className="pt-8">
                <article class="prose min-w-full">
                    <slot />
                </article>
            </BoxContent>
        </Box>
        <Pattern />
    </main>
    <SiteFooter />
</SiteLayout>
