---
export const prerender = true;

import type { GetStaticPaths, Page } from 'astro';

import Back from '@/components/Back';
import Blog from '@/components/Blog.astro';
import Layout from '@/components/Layout.astro';
import Pagination from '@/components/Paginator.astro';

import { allBlogs, getUniqueTags, type TBlog } from '@/utils/blogs';
import { suffixTitle } from '@/site.config';

export const getStaticPaths: GetStaticPaths = async ({ paginate }) => {
	const blogs = await allBlogs();
	const uniqueTags = await getUniqueTags();

	return uniqueTags.flatMap((tag) => {
		return paginate(
			blogs.filter((post) => post.data.tags.includes(tag)),
			{
				pageSize: 10,
				params: { tag }
			}
		);
	});
};

export interface Props {
	page: Page<TBlog>;
}

const { page } = Astro.props as Props;
const { tag } = Astro.params;

const paginationProps = {
	...(page.url.prev && {
		prevUrl: {
			text: `← Previous Tags`,
			url: page.url.prev
		}
	}),
	...(page.url.next && {
		nextUrl: {
			text: `Next Tags →`,
			url: page.url.next
		}
	})
};
---

<Layout
	meta={{
		title: suffixTitle(`Tag: ${tag}`),
		description: `View all posts with the tag - ${tag}`
	}}
>
	<div class="w-full">
		<Back href="/blogs" client:load />
		<h1 class="mb-6 mt-5 flex items-end gap-x-2 text-2xl font-bold">
			Tags: <span class="text-xl">#{tag}</span>
		</h1>
		<section aria-label="Blog post list">
			<ul class="flex flex-col gap-y-3 text-start">
				{page.data.map((p) => <Blog as="h2" blog={p} withDesc />)}
			</ul>
			<Pagination {...paginationProps} />
		</section>
	</div>
</Layout>
