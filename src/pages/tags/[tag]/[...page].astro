---
import type { GetStaticPaths, Page } from "astro";
import type { TBlog } from "@/content/config";

import Layout from "@/components/screens/layout/Layout.astro";
import Back from "@/components/elements/Back";
import Blog from "@/components/screens/blogs/Blog.astro";
import Paginator from "@/components/elements/Paginator";

import { getBlogs, getUniqueTags } from "@/lib/blogs";
import { suffixTitle } from "@/config/site";

export const getStaticPaths: GetStaticPaths = async ({ paginate }) => {
    const blogs = await getBlogs();
    const uniqueTags = await getUniqueTags();

    return uniqueTags.flatMap((tag) => {
        return paginate(
            blogs.filter((post) => post.data.tags.includes(tag)),
            {
                pageSize: 10,
                params: { tag }
            }
        );
    });
};

export interface Props {
    page: Page<TBlog>;
}

const { page } = Astro.props as Props;
const { tag } = Astro.params;

const paginationProps = {
    ...(page.url.prev && {
        prevUrl: {
            text: `← Previous Tags`,
            url: page.url.prev
        }
    }),
    ...(page.url.next && {
        nextUrl: {
            text: `Next Tags →`,
            url: page.url.next
        }
    })
};
---

<Layout title={suffixTitle(`Tag: ${tag}`)} description={`View all posts with the tag - ${tag}`}>
    <div class="w-full">
        <Back href="/blogs" client:load />
        <h1 class="mb-6 mt-5 flex items-end gap-x-2 text-2xl font-bold">
            Tags: <span class="text-xl">#{tag}</span>
        </h1>
        <section aria-label="Blog post list">
            <ul class="flex flex-col gap-y-3 text-start">
                {page.data.map((p) => <Blog as="h2" blog={p} withDesc />)}
            </ul>
            <Paginator {...paginationProps} />
        </section>
    </div>
</Layout>
